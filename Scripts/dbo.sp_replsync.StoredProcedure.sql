USE [GISData]
GO
/****** Object:  StoredProcedure [dbo].[sp_replsync]    Script Date: 2021-07-10 1:50:50 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[sp_replsync] (	@publisher varchar (30),		/* publication server name */	@publisher_db varchar (30),		/* publication database name */	@publication varchar (30),		/* publication name */	@article varchar (30) = ''             /* article name */	) AS    SET NOCOUNT ON    DECLARE @msg varchar(255)    /*    ** Parameter Check: @publisher.    ** Check to make sure that the publisher exists in the sysservers table    */    IF @publisher IS NULL       BEGIN          RAISERROR 51000 'The publisher''s name was not provided '          RETURN (1)       END    IF NOT EXISTS (SELECT * FROM master..sysservers                   WHERE srvname = @publisher)       BEGIN          select @msg = 'Publisher ' + @publisher          select @msg = @msg + '~~Rush_115~~'          RAISERROR 51001 @msg          RETURN (1)       END    /*    ** Parameter Check:  @publication    ** Check to make sure that the publication is not NULL, you    ** are in a subscriber database, and that MSlast_job_info    ** is waiting on the article sync.    */    IF @publication IS NULL       BEGIN          RAISERROR 51002 ' is not defined in master..sysservers'          RETURN (1)       END     /*    ** Parameter Check:  @article    ** Check to make sure that the article is not NULL, you    ** are in a subscriber database, and that MSlast_job_info    ** is waiting on the article sync.    */    IF @article IS NULL       BEGIN          RAISERROR 51003 'The publication name was not provided'          RETURN (1)       END    IF NOT EXISTS(SELECT * FROM sysobjects                  WHERE name = 'MSlast_job_info')       BEGIN          select @msg = 'The article name was not provided'          select @msg = @msg + DB_NAME()          RAISERROR 51004 @msg          RETURN (1)       END    IF NOT EXISTS(SELECT * from MSlast_job_info		WHERE publisher = @publisher		and publisher_db = @publisher_db		and publication = @publication		and article like @article)       BEGIN         select @msg = 'Table MSlast_job_info was not found in database '         select @msg = @msg + 'Replication table MSlast_job_info contains no entry' + @publication	 IF @article <> ''	    select @msg = @msg + ' waiting on a sync for publication ' + @article         RAISERROR 51005 @msg         RETURN (1)       END    /*    ** All Parameters Check Out.    ** So remove information record for the article in MSlast_job_info.    */    delete from MSlast_job_info		WHERE publisher = @publisher		and publisher_db = @publisher_db		and publication = @publication		and article like @article    /*    ** If there are no more manual synchronizations pending increment then    ** job_id in MSlast_job_info.    */    IF NOT EXISTS(SELECT * from MSlast_job_info		WHERE publisher = @publisher		and publisher_db = @publisher_db		and publication = @publication)       BEGIN	    UPDATE MSlast_job_info	    SET job_id = job_id + 1	    WHERE publisher = @publisher	    and publisher_db = @publisher_db		   IF @@ERROR <> 0	      BEGIN		 select @msg = ' article '		 select @msg = @msg + 'Update of job_id in table MSlast_job_info failed' + @publisher + ', ' + @article		 RAISERROR 51006 @msg		 RETURN (1)	      END       END	   /*   ** Success   */   RETURN (0)

GO
